{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonwonjae\\\\react\\\\react-tutorial\\\\canvas-example\\\\src\\\\canvas\\\\Metaball.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./css/metaball.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Metaball() {\n  _s();\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const ctx = canvas.getContext(\"2d\");\n\n    function distance(x0, y0, x1, y1, m) {\n      return m / Math.sqrt((x0 - x1) ** 2 + (y0 - y1) ** 2) ** 2;\n    }\n\n    var metaballs = [];\n\n    for (var i = 0; i < 400; i++) {\n      metaballs.push({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        m: 75 * Math.random() + 25,\n        xvel: 6 * (Math.random() - 0.5),\n        yvel: 6 * (Math.random() - 0.5)\n      });\n    }\n\n    var constant = 10;\n\n    function render(metaballs) {\n      var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n      for (var i = 0; i < imageData.data.length; i += 4) {\n        imageData.data[i] = 255 * (constant > sumMetaballs(i / 4 % canvas.width, ~~(i / 4 / canvas.width), metaballs));\n        imageData.data[i + 1] = 255 * (constant > sumMetaballs(i / 4 % canvas.width, ~~(i / 4 / canvas.width), metaballs));\n        imageData.data[i + 2] = 255 * (constant > sumMetaballs(i / 4 % canvas.width, ~~(i / 4 / canvas.width), metaballs));\n        imageData.data[i + 3] = 255;\n      }\n\n      ctx.putImageData(imageData, 0, 0);\n    }\n\n    function sumMetaballs(x, y, metaballs) {\n      var sum = 0;\n\n      for (var i = 0; i < metaballs.length; i++) {\n        sum += distance(x, y, metaballs[i].x, metaballs[i].y, metaballs[i].m);\n      }\n\n      return sum;\n    } //     function animate() {\n    //       requestAnimationFrame(animate);\n    //       ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    //       for (let i = 0; i < 1000; i++) {\n    //         render(metaballs);\n    //       }\n    //     }\n\n\n    render(metaballs);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Metaball, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Metaball;\nexport default Metaball;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metaball\");","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/src/canvas/Metaball.js"],"names":["React","useEffect","Metaball","canvas","document","getElementById","width","window","innerWidth","height","innerHeight","ctx","getContext","distance","x0","y0","x1","y1","m","Math","sqrt","metaballs","i","push","x","random","y","xvel","yvel","constant","render","imageData","getImageData","data","length","sumMetaballs","putImageData","sum"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./css/metaball.css\";\r\n\r\nfunction Metaball() {\r\n  useEffect(() => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    function distance(x0, y0, x1, y1, m) {\r\n      return m / Math.sqrt((x0 - x1) ** 2 + (y0 - y1) ** 2) ** 2;\r\n    }\r\n    var metaballs = [];\r\n    for (var i = 0; i < 400; i++) {\r\n      metaballs.push({\r\n        x: Math.random() * canvas.width,\r\n        y: Math.random() * canvas.height,\r\n        m: 75 * Math.random() + 25,\r\n        xvel: 6 * (Math.random() - 0.5),\r\n        yvel: 6 * (Math.random() - 0.5),\r\n      });\r\n    }\r\n    var constant = 10;\r\n    function render(metaballs) {\r\n      var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      for (var i = 0; i < imageData.data.length; i += 4) {\r\n        imageData.data[i] =\r\n          255 *\r\n          (constant >\r\n            sumMetaballs(\r\n              (i / 4) % canvas.width,\r\n              ~~(i / 4 / canvas.width),\r\n              metaballs\r\n            ));\r\n        imageData.data[i + 1] =\r\n          255 *\r\n          (constant >\r\n            sumMetaballs(\r\n              (i / 4) % canvas.width,\r\n              ~~(i / 4 / canvas.width),\r\n              metaballs\r\n            ));\r\n        imageData.data[i + 2] =\r\n          255 *\r\n          (constant >\r\n            sumMetaballs(\r\n              (i / 4) % canvas.width,\r\n              ~~(i / 4 / canvas.width),\r\n              metaballs\r\n            ));\r\n        imageData.data[i + 3] = 255;\r\n      }\r\n      ctx.putImageData(imageData, 0, 0);\r\n    }\r\n    function sumMetaballs(x, y, metaballs) {\r\n      var sum = 0;\r\n      for (var i = 0; i < metaballs.length; i++) {\r\n        sum += distance(x, y, metaballs[i].x, metaballs[i].y, metaballs[i].m);\r\n      }\r\n      return sum;\r\n    }\r\n\r\n    //     function animate() {\r\n    //       requestAnimationFrame(animate);\r\n    //       ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    //       for (let i = 0; i < 1000; i++) {\r\n    //         render(metaballs);\r\n    //       }\r\n    //     }\r\n    render(metaballs);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"canvas\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Metaball;\r\n"]},"metadata":{},"sourceType":"module"}