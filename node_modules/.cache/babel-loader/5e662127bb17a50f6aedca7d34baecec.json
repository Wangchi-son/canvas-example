{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonwonjae\\\\react\\\\react-tutorial\\\\canvas-example\\\\src\\\\three\\\\ThreeTuto2.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport * as dat from 'dat.gui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gui = new dat.GUI();\nconst world = {\n  plane: {\n    width: 10\n  }\n};\ngui.add(world.plane, 'width', 1, 500).onChange(planeMesh => {\n  planeMesh.geometry.dispose();\n  planeMesh.geometry = new THREE.PlaneGeometry(10, 10, 10, 10);\n  const {\n    array\n  } = planeMesh.geometry.attributes.position;\n\n  for (let i = 0; i < array.length; i += 3) {\n    const x = array[i];\n    const y = array[i + 1];\n    const z = array[i + 2];\n    array[i + 2] = z + Math.random();\n  }\n});\nexport class ThreeTuto2 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.animate = () => {\n      this.renderer.render(this.scene, this.camera);\n      requestAnimationFrame(this.animate);\n    };\n  }\n\n  componentDidMount() {\n    const width = window.innerWidth - 1;\n    const height = window.innerHeight - 1; // 카메라로 찍으려는 3D무대\n\n    const scene = new THREE.Scene(); // 카메라\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000); // 플레이어 or 영사기\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(width, height); // 픽셀단위로 진하게 해줌\n\n    renderer.setPixelRatio(devicePixelRatio); // HTML canvas\n\n    this.element.appendChild(renderer.domElement); // PlanveGeometry\n\n    const planeGeometry = new THREE.PlaneGeometry(25, 25, 50, 50);\n    const planeMeterial = new THREE.MeshPhongMaterial({\n      color: 0xff0000,\n      side: THREE.DoubleSide,\n      flatShading: THREE.FlatShading\n    });\n    const planeMesh = new THREE.Mesh(planeGeometry, planeMeterial);\n    scene.add(planeMesh); // x,y,z값 조정 방법\n\n    const {\n      array\n    } = planeMesh.geometry.attributes.position;\n\n    for (let i = 0; i < array.length; i += 3) {\n      const x = array[i];\n      const y = array[i + 1];\n      const z = array[i + 2];\n      array[i + 2] = z + Math.random();\n    } // 빛\n\n\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(0, 0, 1);\n    scene.add(light); // 카메라 뷰 깊이\n\n    camera.position.z = 5;\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.planeMesh = planeMesh;\n    this.animate();\n  } // 첫 줄은 카메라 뷰로 렌더링하겠다\n  // 다음 두 줄은 3D박스를 x,y축으로 0.01씩 이동하겠다\n  // 마지막 requestAnimationFrame 함수는 this.animate함수를 계속 호출하라는 뜻\n  // 최대 1ms (1초에 60번씩 그려라) => 성능이 낮은 PC나 CPU/GPU 점유율에 따라 동적으로 변하기도 함\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => this.element = el\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default ThreeTuto2;","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/src/three/ThreeTuto2.js"],"names":["React","Component","THREE","dat","gui","GUI","world","plane","width","add","onChange","planeMesh","geometry","dispose","PlaneGeometry","array","attributes","position","i","length","x","y","z","Math","random","ThreeTuto2","animate","renderer","render","scene","camera","requestAnimationFrame","componentDidMount","window","innerWidth","height","innerHeight","Scene","PerspectiveCamera","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","element","appendChild","domElement","planeGeometry","planeMeterial","MeshPhongMaterial","color","side","DoubleSide","flatShading","FlatShading","Mesh","light","DirectionalLight","set","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nimport * as dat from 'dat.gui';\r\n\r\nconst gui = new dat.GUI();\r\nconst world = {\r\n  plane: {\r\n    width: 10\r\n  }\r\n};\r\ngui.add(world.plane, 'width', 1, 500).onChange((planeMesh) => {\r\n  planeMesh.geometry.dispose();\r\n  planeMesh.geometry = new THREE.PlaneGeometry(10, 10, 10, 10);\r\n  const { array } = planeMesh.geometry.attributes.position;\r\n  for (let i = 0; i < array.length; i += 3) {\r\n    const x = array[i];\r\n    const y = array[i + 1];\r\n    const z = array[i + 2];\r\n\r\n    array[i + 2] = z + Math.random();\r\n  }\r\n});\r\n\r\nexport class ThreeTuto2 extends Component {\r\n  componentDidMount() {\r\n    const width = window.innerWidth - 1;\r\n    const height = window.innerHeight - 1;\r\n\r\n    // 카메라로 찍으려는 3D무대\r\n    const scene = new THREE.Scene();\r\n    // 카메라\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    // 플레이어 or 영사기\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(width, height);\r\n\r\n    // 픽셀단위로 진하게 해줌\r\n    renderer.setPixelRatio(devicePixelRatio);\r\n\r\n    // HTML canvas\r\n    this.element.appendChild(renderer.domElement);\r\n\r\n    // PlanveGeometry\r\n    const planeGeometry = new THREE.PlaneGeometry(25, 25, 50, 50);\r\n    const planeMeterial = new THREE.MeshPhongMaterial({\r\n      color: 0xff0000,\r\n      side: THREE.DoubleSide,\r\n      flatShading: THREE.FlatShading\r\n    });\r\n    const planeMesh = new THREE.Mesh(planeGeometry, planeMeterial);\r\n    scene.add(planeMesh);\r\n\r\n    // x,y,z값 조정 방법\r\n    const { array } = planeMesh.geometry.attributes.position;\r\n    for (let i = 0; i < array.length; i += 3) {\r\n      const x = array[i];\r\n      const y = array[i + 1];\r\n      const z = array[i + 2];\r\n\r\n      array[i + 2] = z + Math.random();\r\n    }\r\n\r\n    // 빛\r\n    const light = new THREE.DirectionalLight(0xffffff, 1);\r\n    light.position.set(0, 0, 1);\r\n    scene.add(light);\r\n\r\n    // 카메라 뷰 깊이\r\n    camera.position.z = 5;\r\n\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.renderer = renderer;\r\n    this.planeMesh = planeMesh;\r\n    this.animate();\r\n  }\r\n\r\n  // 첫 줄은 카메라 뷰로 렌더링하겠다\r\n  // 다음 두 줄은 3D박스를 x,y축으로 0.01씩 이동하겠다\r\n  // 마지막 requestAnimationFrame 함수는 this.animate함수를 계속 호출하라는 뜻\r\n  // 최대 1ms (1초에 60번씩 그려라) => 성능이 낮은 PC나 CPU/GPU 점유율에 따라 동적으로 변하기도 함\r\n\r\n  animate = () => {\r\n    this.renderer.render(this.scene, this.camera);\r\n    requestAnimationFrame(this.animate);\r\n  };\r\n\r\n  render() {\r\n    return <div ref={(el) => (this.element = el)}></div>;\r\n  }\r\n}\r\n\r\nexport default ThreeTuto2;\r\n"]},"metadata":{},"sourceType":"module"}