{"ast":null,"code":"import { GlowParticle } from \"./glowparticle\";\nconst COLORS = [{\n  r: 45,\n  g: 74,\n  b: 227\n}, // blue\n{\n  r: 250,\n  g: 255,\n  b: 89\n}, // yellow\n{\n  r: 255,\n  g: 104,\n  b: 248\n}, // purple\n{\n  r: 44,\n  g: 209,\n  b: 252\n}, // skyblue\n{\n  r: 54,\n  g: 233,\n  b: 84\n} // green\n];\n\nclass App {\n  constructor() {\n    this.canvas = document.createElement(\"canvas\");\n    document.body.appendChild(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\n    this.totalParticles = 1;\n    this.particles = [];\n    this.maxRadius = 90;\n    this.minRadius = 40;\n    window.addEventListener(\"resize\", this.resize.bind(this), false);\n    this.resize();\n    window.requestAnimationFrame(this.animate.bind(this));\n  }\n\n  resize() {\n    this.stageWidth = document.body.clientWidth;\n    this.stageHeight = document.body.clientHeight;\n    this.canvas.width = this.stageWidth * this.pixelRatio;\n    this.canvas.height = this.stageHeight * this.pixelRatio;\n    this.ctx.scale(this.pixelRatio, this.pixelRatio);\n    this.createParticles();\n  }\n\n  createParticles() {\n    let curColor = 0;\n    this.particles = [];\n\n    for (let i = 0; i < this.totalParticles; i++) {\n      const item = new GlowParticle(Math.random * this.stageWidth, Math.random * this.stageHeight, Math.random() * (this.maxRadius - this.minRadius) + this.minRadius, COLORS[curColor]);\n\n      if (++curColor >= COLORS.length) {\n        curColor = 0;\n      }\n\n      this.particles[i] = item;\n    }\n  }\n\n  animate() {\n    window.requestAnimationFrame(this.animate.bind(this));\n    this.ctx.clearRect(0, 0, this.stageWidth, this.stageHeight);\n\n    for (let i = 0; i < this.totalParticles; i++) {\n      const item = this.particles[i];\n      item.animate(this.ctx, this.stageWidth, this.stageHeight);\n    }\n  }\n\n}\n\nwindow.onload = () => {\n  new App();\n};","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/src/canvas/tools/app.js"],"names":["GlowParticle","COLORS","r","g","b","App","constructor","canvas","document","createElement","body","appendChild","ctx","getContext","pixelRatio","window","devicePixelRatio","totalParticles","particles","maxRadius","minRadius","addEventListener","resize","bind","requestAnimationFrame","animate","stageWidth","clientWidth","stageHeight","clientHeight","width","height","scale","createParticles","curColor","i","item","Math","random","length","clearRect","onload"],"mappings":"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","sourcesContent":["import { GlowParticle } from \"./glowparticle\";\r\n\r\nconst COLORS = [\r\n  { r: 45, g: 74, b: 227 }, // blue\r\n  { r: 250, g: 255, b: 89 }, // yellow\r\n  { r: 255, g: 104, b: 248 }, // purple\r\n  { r: 44, g: 209, b: 252 }, // skyblue\r\n  { r: 54, g: 233, b: 84 }, // green\r\n];\r\n\r\nclass App {\r\n  constructor() {\r\n    this.canvas = document.createElement(\"canvas\");\r\n    document.body.appendChild(this.canvas);\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n    this.pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\r\n\r\n    this.totalParticles = 1;\r\n    this.particles = [];\r\n    this.maxRadius = 90;\r\n    this.minRadius = 40;\r\n\r\n    window.addEventListener(\"resize\", this.resize.bind(this), false);\r\n    this.resize();\r\n\r\n    window.requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  resize() {\r\n    this.stageWidth = document.body.clientWidth;\r\n    this.stageHeight = document.body.clientHeight;\r\n\r\n    this.canvas.width = this.stageWidth * this.pixelRatio;\r\n    this.canvas.height = this.stageHeight * this.pixelRatio;\r\n    this.ctx.scale(this.pixelRatio, this.pixelRatio);\r\n\r\n    this.createParticles();\r\n  }\r\n\r\n  createParticles() {\r\n    let curColor = 0;\r\n    this.particles = [];\r\n\r\n    for (let i = 0; i < this.totalParticles; i++) {\r\n      const item = new GlowParticle(\r\n        Math.random * this.stageWidth,\r\n        Math.random * this.stageHeight,\r\n        Math.random() * (this.maxRadius - this.minRadius) + this.minRadius,\r\n        COLORS[curColor]\r\n      );\r\n\r\n      if (++curColor >= COLORS.length) {\r\n        curColor = 0;\r\n      }\r\n\r\n      this.particles[i] = item;\r\n    }\r\n  }\r\n  animate() {\r\n    window.requestAnimationFrame(this.animate.bind(this));\r\n\r\n    this.ctx.clearRect(0, 0, this.stageWidth, this.stageHeight);\r\n\r\n    for (let i = 0; i < this.totalParticles; i++) {\r\n      const item = this.particles[i];\r\n      item.animate(this.ctx, this.stageWidth, this.stageHeight);\r\n    }\r\n  }\r\n}\r\n\r\nwindow.onload = () => {\r\n  new App();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}