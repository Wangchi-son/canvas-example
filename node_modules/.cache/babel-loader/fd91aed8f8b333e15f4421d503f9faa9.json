{"ast":null,"code":"import { Hello } from './example/hello';\nimport { France } from './example/france';\nimport { Gradient5 } from './example/gradient5';\nimport { Scale } from './example/scale';\nimport { Rotate } from './example/rotate';\nimport { Translate } from './example/translate';\nimport { Transform } from './example/transform';\nimport { GlobalAlpha } from './example/globalAlpha';\nimport { Let1 } from './example/let1';\nimport { Circle } from './example/circle';\nexport function Exam1() {\n  //\n  // canvas 크기 지정\n  const canvas = document.querySelector('canvas');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  console.log(canvas.width);\n  console.log(canvas.height); // 캔버스 context\n\n  const ctx = canvas.getContext('2d'); // 캔버스 resize\n\n  window.addEventListener('resize', function () {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }); // 캔버스 내용\n  // Hello(ctx);\n  // France(ctx);\n  // Gradient5(ctx);\n  // Scale(ctx);\n  // Rotate(ctx);\n  // Translate(ctx);\n  // Transform(ctx);\n  // GlobalAlpha(ctx);\n\n  Let1(ctx); //\n\n  const circleArray = [];\n\n  for (let i = 0; i < 100; i++) {\n    // 값 지정\n    const radius = Math.random() * 8 + 1;\n    const x = Math.random() * (window.innerWidth - radius * 2) + radius;\n    const y = Math.random() * (window.innerHeight - radius * 2) + radius;\n    const dx = (Math.random() - 0.5) * 2;\n    const dy = (Math.random() - 0.5) * 2;\n    circleArray.push(new Circle(x, y, dx, dy, radius, ctx));\n  }\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n    for (let i = 0; i < circleArray.length; i++) {\n      circleArray[i].update();\n    }\n  };\n\n  console.log(circleArray[0]);\n}\n_c = Exam1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exam1\");","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/src/canvas/tools/Exam1.js"],"names":["Hello","France","Gradient5","Scale","Rotate","Translate","Transform","GlobalAlpha","Let1","Circle","Exam1","canvas","document","querySelector","width","window","innerWidth","height","innerHeight","console","log","ctx","getContext","addEventListener","circleArray","i","radius","Math","random","x","y","dx","dy","push","animate","requestAnimationFrame","clearRect","length","update"],"mappings":"AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAO,SAASC,KAAT,GAAiB;AACtB;AACA;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAL,EAAAA,MAAM,CAACM,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACG,KAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACM,MAAnB,EARsB,CAStB;;AACA,QAAMI,GAAG,GAAGV,MAAM,CAACW,UAAP,CAAkB,IAAlB,CAAZ,CAVsB,CAYtB;;AACAP,EAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC5CZ,IAAAA,MAAM,CAACG,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAL,IAAAA,MAAM,CAACM,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AACD,GAHD,EAbsB,CAkBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAV,EAAAA,IAAI,CAACa,GAAD,CAAJ,CA3BsB,CA6BtB;;AAEA,QAAMG,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAnC;AACA,UAAMC,CAAC,GAAGF,IAAI,CAACC,MAAL,MAAiBb,MAAM,CAACC,UAAP,GAAoBU,MAAM,GAAG,CAA9C,IAAmDA,MAA7D;AACA,UAAMI,CAAC,GAAGH,IAAI,CAACC,MAAL,MAAiBb,MAAM,CAACG,WAAP,GAAqBQ,MAAM,GAAG,CAA/C,IAAoDA,MAA9D;AACA,UAAMK,EAAE,GAAG,CAACJ,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAnC;AACA,UAAMI,EAAE,GAAG,CAACL,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAnC;AAEAJ,IAAAA,WAAW,CAACS,IAAZ,CAAiB,IAAIxB,MAAJ,CAAWoB,CAAX,EAAcC,CAAd,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBN,MAAzB,EAAiCL,GAAjC,CAAjB;AACD;;AAED,QAAMa,OAAO,GAAG,MAAM;AACpBC,IAAAA,qBAAqB,CAACD,OAAD,CAArB;AACAb,IAAAA,GAAG,CAACe,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBrB,MAAM,CAACC,UAA3B,EAAuCD,MAAM,CAACG,WAA9C;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACa,MAAhC,EAAwCZ,CAAC,EAAzC,EAA6C;AAC3CD,MAAAA,WAAW,CAACC,CAAD,CAAX,CAAea,MAAf;AACD;AACF,GAPD;;AASAnB,EAAAA,OAAO,CAACC,GAAR,CAAYI,WAAW,CAAC,CAAD,CAAvB;AACD;KArDed,K","sourcesContent":["import { Hello } from './example/hello';\r\nimport { France } from './example/france';\r\nimport { Gradient5 } from './example/gradient5';\r\nimport { Scale } from './example/scale';\r\nimport { Rotate } from './example/rotate';\r\nimport { Translate } from './example/translate';\r\nimport { Transform } from './example/transform';\r\nimport { GlobalAlpha } from './example/globalAlpha';\r\nimport { Let1 } from './example/let1';\r\nimport { Circle } from './example/circle';\r\n\r\nexport function Exam1() {\r\n  //\r\n  // canvas 크기 지정\r\n  const canvas = document.querySelector('canvas');\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight;\r\n\r\n  console.log(canvas.width);\r\n  console.log(canvas.height);\r\n  // 캔버스 context\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  // 캔버스 resize\r\n  window.addEventListener('resize', function () {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  });\r\n\r\n  // 캔버스 내용\r\n  // Hello(ctx);\r\n  // France(ctx);\r\n  // Gradient5(ctx);\r\n  // Scale(ctx);\r\n  // Rotate(ctx);\r\n  // Translate(ctx);\r\n  // Transform(ctx);\r\n  // GlobalAlpha(ctx);\r\n  Let1(ctx);\r\n\r\n  //\r\n\r\n  const circleArray = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    // 값 지정\r\n    const radius = Math.random() * 8 + 1;\r\n    const x = Math.random() * (window.innerWidth - radius * 2) + radius;\r\n    const y = Math.random() * (window.innerHeight - radius * 2) + radius;\r\n    const dx = (Math.random() - 0.5) * 2;\r\n    const dy = (Math.random() - 0.5) * 2;\r\n\r\n    circleArray.push(new Circle(x, y, dx, dy, radius, ctx));\r\n  }\r\n\r\n  const animate = () => {\r\n    requestAnimationFrame(animate);\r\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n\r\n    for (let i = 0; i < circleArray.length; i++) {\r\n      circleArray[i].update();\r\n    }\r\n  };\r\n\r\n  console.log(circleArray[0]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}