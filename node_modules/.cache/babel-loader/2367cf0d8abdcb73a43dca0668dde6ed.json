{"ast":null,"code":"'use strict';\n\nvar _fontFaces = {};\n/**\n * @param {String} family The CSS font-family value\n * @param {String} url The remote URL for the font file\n * @param {Object} attributes Font attributes supported: style, weight\n * @return {Object}\n */\n\nfunction FontFace(family, url, attributes) {\n  var fontFace;\n  var fontId;\n  attributes = attributes || {};\n  attributes.style = attributes.style || 'normal';\n  attributes.weight = attributes.weight || 400;\n  fontId = getCacheKey(family, url, attributes);\n  fontFace = _fontFaces[fontId];\n\n  if (!fontFace) {\n    fontFace = {};\n    fontFace.id = fontId;\n    fontFace.family = family;\n    fontFace.url = url;\n    fontFace.attributes = attributes;\n    _fontFaces[fontId] = fontFace;\n  }\n\n  return fontFace;\n}\n/**\n * Helper for retrieving the default family by weight.\n *\n * @param {Number} fontWeight\n * @return {FontFace}\n */\n\n\nFontFace.Default = function (fontWeight) {\n  return FontFace('sans-serif', null, {\n    weight: fontWeight\n  });\n};\n/**\n * @internal\n */\n\n\nfunction getCacheKey(family, url, attributes) {\n  return family + url + Object.keys(attributes).sort().map(function (key) {\n    return attributes[key];\n  });\n}\n\nmodule.exports = FontFace;","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/node_modules/react-canvas/lib/FontFace.js"],"names":["_fontFaces","FontFace","family","url","attributes","fontFace","fontId","style","weight","getCacheKey","id","Default","fontWeight","Object","keys","sort","map","key","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAG,EAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1C,MAAIC,QAAJ;AACA,MAAIC,MAAJ;AAEAF,EAAAA,UAAU,GAAGA,UAAU,IAAI,EAA3B;AACAA,EAAAA,UAAU,CAACG,KAAX,GAAmBH,UAAU,CAACG,KAAX,IAAoB,QAAvC;AACAH,EAAAA,UAAU,CAACI,MAAX,GAAoBJ,UAAU,CAACI,MAAX,IAAqB,GAAzC;AAEAF,EAAAA,MAAM,GAAGG,WAAW,CAACP,MAAD,EAASC,GAAT,EAAcC,UAAd,CAApB;AACAC,EAAAA,QAAQ,GAAGL,UAAU,CAACM,MAAD,CAArB;;AAEA,MAAI,CAACD,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,EAAX;AACAA,IAAAA,QAAQ,CAACK,EAAT,GAAcJ,MAAd;AACAD,IAAAA,QAAQ,CAACH,MAAT,GAAkBA,MAAlB;AACAG,IAAAA,QAAQ,CAACF,GAAT,GAAeA,GAAf;AACAE,IAAAA,QAAQ,CAACD,UAAT,GAAsBA,UAAtB;AACAJ,IAAAA,UAAU,CAACM,MAAD,CAAV,GAAqBD,QAArB;AACD;;AAED,SAAOA,QAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACAJ,QAAQ,CAACU,OAAT,GAAmB,UAAUC,UAAV,EAAsB;AACvC,SAAOX,QAAQ,CAAC,YAAD,EAAe,IAAf,EAAqB;AAACO,IAAAA,MAAM,EAAEI;AAAT,GAArB,CAAf;AACD,CAFD;AAIA;AACA;AACA;;;AACA,SAASH,WAAT,CAAsBP,MAAtB,EAA8BC,GAA9B,EAAmCC,UAAnC,EAA+C;AAC7C,SAAOF,MAAM,GAAGC,GAAT,GAAeU,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBW,IAAxB,GAA+BC,GAA/B,CAAmC,UAAUC,GAAV,EAAe;AACtE,WAAOb,UAAU,CAACa,GAAD,CAAjB;AACD,GAFqB,CAAtB;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["'use strict';\n\nvar _fontFaces = {};\n\n/**\n * @param {String} family The CSS font-family value\n * @param {String} url The remote URL for the font file\n * @param {Object} attributes Font attributes supported: style, weight\n * @return {Object}\n */\nfunction FontFace (family, url, attributes) {\n  var fontFace;\n  var fontId;\n\n  attributes = attributes || {};\n  attributes.style = attributes.style || 'normal';\n  attributes.weight = attributes.weight || 400;\n\n  fontId = getCacheKey(family, url, attributes);\n  fontFace = _fontFaces[fontId];\n\n  if (!fontFace) {\n    fontFace = {};\n    fontFace.id = fontId;\n    fontFace.family = family;\n    fontFace.url = url;\n    fontFace.attributes = attributes;\n    _fontFaces[fontId] = fontFace;\n  }\n\n  return fontFace;\n}\n\n/**\n * Helper for retrieving the default family by weight.\n *\n * @param {Number} fontWeight\n * @return {FontFace}\n */\nFontFace.Default = function (fontWeight) {\n  return FontFace('sans-serif', null, {weight: fontWeight});\n};\n\n/**\n * @internal\n */\nfunction getCacheKey (family, url, attributes) {\n  return family + url + Object.keys(attributes).sort().map(function (key) {\n    return attributes[key];\n  });\n}\n\nmodule.exports = FontFace;\n"]},"metadata":{},"sourceType":"script"}