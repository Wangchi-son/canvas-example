{"ast":null,"code":"'use strict';\n\nvar computeLayout = require('./Layout');\n/**\n * This computes the CSS layout for a RenderLayer tree and mutates the frame\n * objects at each node.\n *\n * @param {Renderlayer} root\n * @return {Object}\n */\n\n\nfunction layoutNode(root) {\n  var rootNode = createNode(root);\n  computeLayout(rootNode);\n  walkNode(rootNode);\n  return rootNode;\n}\n\nfunction createNode(layer) {\n  return {\n    layer: layer,\n    layout: {\n      width: undefined,\n      // computeLayout will mutate\n      height: undefined,\n      // computeLayout will mutate\n      top: 0,\n      left: 0\n    },\n    style: layer._originalStyle || {},\n    children: (layer.children || []).map(createNode)\n  };\n}\n\nfunction walkNode(node, parentLeft, parentTop) {\n  node.layer.frame.x = node.layout.left + (parentLeft || 0);\n  node.layer.frame.y = node.layout.top + (parentTop || 0);\n  node.layer.frame.width = node.layout.width;\n  node.layer.frame.height = node.layout.height;\n\n  if (node.children && node.children.length > 0) {\n    node.children.forEach(function (child) {\n      walkNode(child, node.layer.frame.x, node.layer.frame.y);\n    });\n  }\n}\n\nmodule.exports = layoutNode;","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/node_modules/react-canvas/lib/layoutNode.js"],"names":["computeLayout","require","layoutNode","root","rootNode","createNode","walkNode","layer","layout","width","undefined","height","top","left","style","_originalStyle","children","map","node","parentLeft","parentTop","frame","x","y","length","forEach","child","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,UAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,QAAQ,GAAGC,UAAU,CAACF,IAAD,CAAzB;AACAH,EAAAA,aAAa,CAACI,QAAD,CAAb;AACAE,EAAAA,QAAQ,CAACF,QAAD,CAAR;AACA,SAAOA,QAAP;AACD;;AAED,SAASC,UAAT,CAAqBE,KAArB,EAA4B;AAC1B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEC,SADD;AACY;AAClBC,MAAAA,MAAM,EAAED,SAFF;AAEa;AACnBE,MAAAA,GAAG,EAAE,CAHC;AAINC,MAAAA,IAAI,EAAE;AAJA,KAFH;AAQLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,cAAN,IAAwB,EAR1B;AASLC,IAAAA,QAAQ,EAAE,CAACT,KAAK,CAACS,QAAN,IAAkB,EAAnB,EAAuBC,GAAvB,CAA2BZ,UAA3B;AATL,GAAP;AAWD;;AAED,SAASC,QAAT,CAAmBY,IAAnB,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgD;AAC9CF,EAAAA,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBC,CAAjB,GAAqBJ,IAAI,CAACV,MAAL,CAAYK,IAAZ,IAAoBM,UAAU,IAAI,CAAlC,CAArB;AACAD,EAAAA,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBE,CAAjB,GAAqBL,IAAI,CAACV,MAAL,CAAYI,GAAZ,IAAmBQ,SAAS,IAAI,CAAhC,CAArB;AACAF,EAAAA,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBZ,KAAjB,GAAyBS,IAAI,CAACV,MAAL,CAAYC,KAArC;AACAS,EAAAA,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBV,MAAjB,GAA0BO,IAAI,CAACV,MAAL,CAAYG,MAAtC;;AACA,MAAIO,IAAI,CAACF,QAAL,IAAiBE,IAAI,CAACF,QAAL,CAAcQ,MAAd,GAAuB,CAA5C,EAA+C;AAC7CN,IAAAA,IAAI,CAACF,QAAL,CAAcS,OAAd,CAAsB,UAAUC,KAAV,EAAiB;AACrCpB,MAAAA,QAAQ,CAACoB,KAAD,EAAQR,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBC,CAAzB,EAA4BJ,IAAI,CAACX,KAAL,CAAWc,KAAX,CAAiBE,CAA7C,CAAR;AACD,KAFD;AAGD;AACF;;AAEDI,MAAM,CAACC,OAAP,GAAiB1B,UAAjB","sourcesContent":["'use strict';\n\nvar computeLayout = require('./Layout');\n\n/**\n * This computes the CSS layout for a RenderLayer tree and mutates the frame\n * objects at each node.\n *\n * @param {Renderlayer} root\n * @return {Object}\n */\nfunction layoutNode (root) {\n  var rootNode = createNode(root);\n  computeLayout(rootNode);\n  walkNode(rootNode);\n  return rootNode;\n}\n\nfunction createNode (layer) {\n  return {\n    layer: layer,\n    layout: {\n      width: undefined, // computeLayout will mutate\n      height: undefined, // computeLayout will mutate\n      top: 0,\n      left: 0,\n    },\n    style: layer._originalStyle || {},\n    children: (layer.children || []).map(createNode)\n  };\n}\n\nfunction walkNode (node, parentLeft, parentTop) {\n  node.layer.frame.x = node.layout.left + (parentLeft || 0);\n  node.layer.frame.y = node.layout.top + (parentTop || 0);\n  node.layer.frame.width = node.layout.width;\n  node.layer.frame.height = node.layout.height;\n  if (node.children && node.children.length > 0) {\n    node.children.forEach(function (child) {\n      walkNode(child, node.layer.frame.x, node.layer.frame.y);\n    });\n  }\n}\n\nmodule.exports = layoutNode;\n"]},"metadata":{},"sourceType":"script"}