{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar ReactUpdates = require('react-dom/lib/ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ContainerMixin = require('./ContainerMixin');\n\nvar RenderLayer = require('./RenderLayer');\n\nvar FrameUtils = require('./FrameUtils');\n\nvar DrawingUtils = require('./DrawingUtils');\n\nvar hitTest = require('./hitTest');\n\nvar layoutNode = require('./layoutNode');\n/**\n * Surface is a standard React component and acts as the main drawing canvas.\n * ReactCanvas components cannot be rendered outside a Surface.\n */\n\n\nvar Surface = React.createClass({\n  mixins: [ContainerMixin],\n  propTypes: {\n    className: React.PropTypes.string,\n    id: React.PropTypes.string,\n    top: React.PropTypes.number.isRequired,\n    left: React.PropTypes.number.isRequired,\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    scale: React.PropTypes.number.isRequired,\n    enableCSSLayout: React.PropTypes.bool\n  },\n  getDefaultProps: function () {\n    return {\n      scale: window.devicePixelRatio || 1\n    };\n  },\n  componentDidMount: function () {\n    // Prepare the <canvas> for drawing.\n    this.scale(); // ContainerMixin expects `this.node` to be set prior to mounting children.\n    // `this.node` is injected into child components and represents the current\n    // render tree.\n\n    this.node = new RenderLayer();\n    this.node.frame = FrameUtils.make(this.props.left, this.props.top, this.props.width, this.props.height);\n    this.node.draw = this.batchedTick; // This is the integration point between custom canvas components and React\n\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(this.mountAndInjectChildrenAtRoot, this, this.props.children, transaction);\n    ReactUpdates.ReactReconcileTransaction.release(transaction); // Execute initial draw on mount.\n\n    this.node.draw();\n  },\n  componentWillUnmount: function () {\n    // Implemented in ReactMultiChild.Mixin\n    this.unmountChildren();\n  },\n  componentDidUpdate: function (prevProps, prevState) {\n    // We have to manually apply child reconciliation since child are not\n    // declared in render().\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(this.updateChildrenAtRoot, this, this.props.children, transaction);\n    ReactUpdates.ReactReconcileTransaction.release(transaction); // Re-scale the <canvas> when changing size.\n\n    if (prevProps.width !== this.props.width || prevProps.height !== this.props.height) {\n      this.scale();\n    } // Redraw updated render tree to <canvas>.\n\n\n    if (this.node) {\n      this.node.draw();\n    }\n  },\n  render: function () {\n    // Scale the drawing area to match DPI.\n    var width = this.props.width * this.props.scale;\n    var height = this.props.height * this.props.scale;\n    var style = {\n      width: this.props.width,\n      height: this.props.height\n    };\n    return React.createElement('canvas', {\n      ref: 'canvas',\n      className: this.props.className,\n      id: this.props.id,\n      width: width,\n      height: height,\n      style: style,\n      onTouchStart: this.handleTouchStart,\n      onTouchMove: this.handleTouchMove,\n      onTouchEnd: this.handleTouchEnd,\n      onTouchCancel: this.handleTouchEnd,\n      onClick: this.handleClick,\n      onContextMenu: this.handleContextMenu,\n      onDoubleClick: this.handleDoubleClick\n    });\n  },\n  // Drawing\n  // =======\n  getContext: function () {\n    'production' !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Tried to access drawing context on an unmounted Surface.') : invariant(this.isMounted());\n    return this.refs.canvas.getContext('2d');\n  },\n  scale: function () {\n    this.getContext().scale(this.props.scale, this.props.scale);\n  },\n  batchedTick: function () {\n    if (this._frameReady === false) {\n      this._pendingTick = true;\n      return;\n    }\n\n    this.tick();\n  },\n  tick: function () {\n    // Block updates until next animation frame.\n    this._frameReady = false;\n    this.clear();\n    this.draw();\n    requestAnimationFrame(this.afterTick);\n  },\n  afterTick: function () {\n    // Execute pending draw that may have been scheduled during previous frame\n    this._frameReady = true;\n\n    if (this._pendingTick) {\n      this._pendingTick = false;\n      this.batchedTick();\n    }\n  },\n  clear: function () {\n    this.getContext().clearRect(0, 0, this.props.width, this.props.height);\n  },\n  draw: function () {\n    var layout;\n\n    if (this.node) {\n      if (this.props.enableCSSLayout) {\n        layout = layoutNode(this.node);\n      }\n\n      DrawingUtils.drawRenderLayer(this.getContext(), this.node);\n    }\n  },\n  // Events\n  // ======\n  hitTest: function (e) {\n    var hitTarget = hitTest(e, this.node, this.refs.canvas);\n\n    if (hitTarget) {\n      hitTarget[hitTest.getHitHandle(e.type)](e);\n    }\n  },\n  handleTouchStart: function (e) {\n    var hitTarget = hitTest(e, this.node, this.refs.canvas);\n    var touch;\n\n    if (hitTarget) {\n      // On touchstart: capture the current hit target for the given touch.\n      this._touches = this._touches || {};\n\n      for (var i = 0, len = e.touches.length; i < len; i++) {\n        touch = e.touches[i];\n        this._touches[touch.identifier] = hitTarget;\n      }\n\n      hitTarget[hitTest.getHitHandle(e.type)](e);\n    }\n  },\n  handleTouchMove: function (e) {\n    this.hitTest(e);\n  },\n  handleTouchEnd: function (e) {\n    // touchend events do not generate a pageX/pageY so we rely\n    // on the currently captured touch targets.\n    if (!this._touches) {\n      return;\n    }\n\n    var hitTarget;\n    var hitHandle = hitTest.getHitHandle(e.type);\n\n    for (var i = 0, len = e.changedTouches.length; i < len; i++) {\n      hitTarget = this._touches[e.changedTouches[i].identifier];\n\n      if (hitTarget && hitTarget[hitHandle]) {\n        hitTarget[hitHandle](e);\n      }\n\n      delete this._touches[e.changedTouches[i].identifier];\n    }\n  },\n  handleClick: function (e) {\n    this.hitTest(e);\n  },\n  handleContextMenu: function (e) {\n    this.hitTest(e);\n  },\n  handleDoubleClick: function (e) {\n    this.hitTest(e);\n  }\n});\nmodule.exports = Surface;","map":{"version":3,"sources":["C:/Users/sonwonjae/react/react-tutorial/canvas-example/node_modules/react-canvas/lib/Surface.js"],"names":["React","require","ReactUpdates","invariant","ContainerMixin","RenderLayer","FrameUtils","DrawingUtils","hitTest","layoutNode","Surface","createClass","mixins","propTypes","className","PropTypes","string","id","top","number","isRequired","left","width","height","scale","enableCSSLayout","bool","getDefaultProps","window","devicePixelRatio","componentDidMount","node","frame","make","props","draw","batchedTick","transaction","ReactReconcileTransaction","getPooled","perform","mountAndInjectChildrenAtRoot","children","release","componentWillUnmount","unmountChildren","componentDidUpdate","prevProps","prevState","updateChildrenAtRoot","render","style","createElement","ref","onTouchStart","handleTouchStart","onTouchMove","handleTouchMove","onTouchEnd","handleTouchEnd","onTouchCancel","onClick","handleClick","onContextMenu","handleContextMenu","onDoubleClick","handleDoubleClick","getContext","process","env","NODE_ENV","isMounted","refs","canvas","_frameReady","_pendingTick","tick","clear","requestAnimationFrame","afterTick","clearRect","layout","drawRenderLayer","e","hitTarget","getHitHandle","type","touch","_touches","i","len","touches","length","identifier","hitHandle","changedTouches","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar ReactUpdates = require('react-dom/lib/ReactUpdates');\nvar invariant = require('fbjs/lib/invariant');\nvar ContainerMixin = require('./ContainerMixin');\nvar RenderLayer = require('./RenderLayer');\nvar FrameUtils = require('./FrameUtils');\nvar DrawingUtils = require('./DrawingUtils');\nvar hitTest = require('./hitTest');\nvar layoutNode = require('./layoutNode');\n\n/**\n * Surface is a standard React component and acts as the main drawing canvas.\n * ReactCanvas components cannot be rendered outside a Surface.\n */\n\nvar Surface = React.createClass({\n\n  mixins: [ContainerMixin],\n\n  propTypes: {\n    className: React.PropTypes.string,\n    id: React.PropTypes.string,\n    top: React.PropTypes.number.isRequired,\n    left: React.PropTypes.number.isRequired,\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    scale: React.PropTypes.number.isRequired,\n    enableCSSLayout: React.PropTypes.bool\n  },\n\n  getDefaultProps: function () {\n    return {\n      scale: window.devicePixelRatio || 1\n    };\n  },\n\n  componentDidMount: function () {\n    // Prepare the <canvas> for drawing.\n    this.scale();\n\n    // ContainerMixin expects `this.node` to be set prior to mounting children.\n    // `this.node` is injected into child components and represents the current\n    // render tree.\n    this.node = new RenderLayer();\n    this.node.frame = FrameUtils.make(this.props.left, this.props.top, this.props.width, this.props.height);\n    this.node.draw = this.batchedTick;\n\n    // This is the integration point between custom canvas components and React\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(\n      this.mountAndInjectChildrenAtRoot,\n      this,\n      this.props.children,\n      transaction\n    );\n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n\n    // Execute initial draw on mount.\n    this.node.draw();\n  },\n\n  componentWillUnmount: function () {\n    // Implemented in ReactMultiChild.Mixin\n    this.unmountChildren();\n  },\n\n  componentDidUpdate: function (prevProps, prevState) {\n    // We have to manually apply child reconciliation since child are not\n    // declared in render().\n    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(\n      this.updateChildrenAtRoot,\n      this,\n      this.props.children,\n      transaction\n    );\n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n\n    // Re-scale the <canvas> when changing size.\n    if (prevProps.width !== this.props.width || prevProps.height !== this.props.height) {\n      this.scale();\n    }\n\n    // Redraw updated render tree to <canvas>.\n    if (this.node) {\n      this.node.draw();\n    }\n  },\n\n  render: function () {\n    // Scale the drawing area to match DPI.\n    var width = this.props.width * this.props.scale;\n    var height = this.props.height * this.props.scale;\n    var style = {\n      width: this.props.width,\n      height: this.props.height\n    };\n\n    return (\n      React.createElement('canvas', {\n        ref: 'canvas',\n        className: this.props.className,\n        id: this.props.id,\n        width: width,\n        height: height,\n        style: style,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleTouchEnd,\n        onTouchCancel: this.handleTouchEnd,\n        onClick: this.handleClick,\n        onContextMenu: this.handleContextMenu,\n        onDoubleClick: this.handleDoubleClick})\n    );\n  },\n\n  // Drawing\n  // =======\n\n  getContext: function () {\n    ('production' !== process.env.NODE_ENV ? invariant(\n      this.isMounted(),\n      'Tried to access drawing context on an unmounted Surface.'\n    ) : invariant(this.isMounted()));\n    return this.refs.canvas.getContext('2d');\n  },\n\n  scale: function () {\n    this.getContext().scale(this.props.scale, this.props.scale);\n  },\n\n  batchedTick: function () {\n    if (this._frameReady === false) {\n      this._pendingTick = true;\n      return;\n    }\n    this.tick();\n  },\n\n  tick: function () {\n    // Block updates until next animation frame.\n    this._frameReady = false;\n    this.clear();\n    this.draw();\n    requestAnimationFrame(this.afterTick);\n  },\n\n  afterTick: function () {\n    // Execute pending draw that may have been scheduled during previous frame\n    this._frameReady = true;\n    if (this._pendingTick) {\n      this._pendingTick = false;\n      this.batchedTick();\n    }\n  },\n\n  clear: function () {\n    this.getContext().clearRect(0, 0, this.props.width, this.props.height);\n  },\n\n  draw: function () {\n    var layout;\n    if (this.node) {\n      if (this.props.enableCSSLayout) {\n        layout = layoutNode(this.node);\n      }\n      DrawingUtils.drawRenderLayer(this.getContext(), this.node);\n    }\n  },\n\n  // Events\n  // ======\n\n  hitTest: function (e) {\n    var hitTarget = hitTest(e, this.node, this.refs.canvas);\n    if (hitTarget) {\n      hitTarget[hitTest.getHitHandle(e.type)](e);\n    }\n  },\n\n  handleTouchStart: function (e) {\n    var hitTarget = hitTest(e, this.node, this.refs.canvas);\n    var touch;\n    if (hitTarget) {\n      // On touchstart: capture the current hit target for the given touch.\n      this._touches = this._touches || {};\n      for (var i=0, len=e.touches.length; i < len; i++) {\n        touch = e.touches[i];\n        this._touches[touch.identifier] = hitTarget;\n      }\n      hitTarget[hitTest.getHitHandle(e.type)](e);\n    }\n  },\n\n  handleTouchMove: function (e) {\n    this.hitTest(e);\n  },\n\n  handleTouchEnd: function (e) {\n    // touchend events do not generate a pageX/pageY so we rely\n    // on the currently captured touch targets.\n    if (!this._touches) {\n      return;\n    }\n\n    var hitTarget;\n    var hitHandle = hitTest.getHitHandle(e.type);\n    for (var i=0, len=e.changedTouches.length; i < len; i++) {\n      hitTarget = this._touches[e.changedTouches[i].identifier];\n      if (hitTarget && hitTarget[hitHandle]) {\n        hitTarget[hitHandle](e);\n      }\n      delete this._touches[e.changedTouches[i].identifier];\n    }\n  },\n\n  handleClick: function (e) {\n    this.hitTest(e);\n  },\n\n  handleContextMenu: function (e) {\n    this.hitTest(e);\n  },\n\n  handleDoubleClick: function (e) {\n    this.hitTest(e);\n  },\n\n});\n\nmodule.exports = Surface;\n"]},"metadata":{},"sourceType":"script"}